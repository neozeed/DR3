/*
 * Copyright 1991-1998 by Open Software Foundation, Inc. 
 *              All Rights Reserved 
 *  
 * Permission to use, copy, modify, and distribute this software and 
 * its documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appears in all copies and 
 * that both the copyright notice and this permission notice appear in 
 * supporting documentation. 
 *  
 * OSF DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE 
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE. 
 *  
 * IN NO EVENT SHALL OSF BE LIABLE FOR ANY SPECIAL, INDIRECT, OR 
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT, 
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
 */
/* 
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */
/*
 * MkLinux
 */
/*
 *	File:	memory_object.defs
 *	Author:	Joseph S. Barrera III
 *	Date:	1991
 *
 *	Private defs file for xmm use.
 */

subsystem memory_object 2200;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

serverprefix	memory_object_;
userprefix	proxy_;

simpleroutine	init(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		memory_object_name	: memory_object_name_t;
		memory_object_page_size	: vm_size_t);

simpleroutine	terminate(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t
						= MACH_MSG_TYPE_MOVE_RECEIVE;
		memory_object_name	: memory_object_name_t
						= MACH_MSG_TYPE_MOVE_RECEIVE);

simpleroutine	copy(
		old_memory_object	: memory_object_t;
		old_memory_control	: memory_object_control_t;
		offset			: vm_offset_t;
		length			: vm_size_t;
		new_memory_object	: memory_object_t
						= MACH_MSG_TYPE_MOVE_RECEIVE);

simpleroutine	data_request(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		length			: vm_size_t;
		desired_access		: vm_prot_t);

simpleroutine	data_unlock(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		length			: vm_size_t;
		desired_access		: vm_prot_t);

simpleroutine	data_write(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		data			: pointer_t);

simpleroutine	lock_completed(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		length			: vm_size_t);

simpleroutine	supply_completed(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		length			: vm_size_t;
		result			: kern_return_t;
		error_offset		: vm_offset_t);

simpleroutine	data_return(
		memory_object		: memory_object_t;
		memory_control		: memory_object_control_t;
		offset			: vm_offset_t;
		data			: pointer_t);

simpleroutine	change_completed(
		memory_object		: memory_object_t;
		may_cache		: boolean_t;
		copy_strategy		: memory_object_copy_strategy_t);
